{"version":3,"sources":["context/promptContext.js","components/OptionForms/SectionsForm/index.js","components/OptionForms/SectionsForm/SectionsForm.js","components/PromptOutput/index.js","components/PromptOutput/PromptOutput.js","App.js","index.js","components/OptionForms/SectionsForm/SectionsForm.module.css","App.module.css","components/PromptOutput/PromptOutput.module.css"],"names":["PromptContext","createContext","usePrompt","useContext","PromptProvider","props","useState","user","setUser","host","setHost","path","setPath","branch","setBranch","userColor","setUserColor","hostColor","setHostColor","pathColor","setPathColor","branchColor","setBranchColor","Provider","value","colors","black","blue","cyan","green","purple","red","white","yellow","children","SectionsForm","colorKeys","Object","keys","toggle","state","stateSetter","className","styles","subsection","subsectionForm","label","htmlFor","type","name","checked","onChange","e","target","dropdown","map","color","PromptOutput","userPrompt","setUserPrompt","hostPrompt","setHostPrompt","pathPrompt","setPathPrompt","branchPrompt","setBranchPrompt","useEffect","userPromptInfo","hostPromptInfo","pathPromptInfo","branchPromptInfo","wGit","woGit","prompt","readOnly","text","copyButton","App","mainContainer","header","contentContainer","formContainer","promptContainer","footer","Root","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.92cd84d6.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nexport const PromptContext = createContext();\n\nexport const usePrompt = () => useContext(PromptContext);\n\nexport const PromptProvider = (props) => {\n  const [user, setUser] = useState(1);\n  const [host, setHost] = useState(1);\n  const [path, setPath] = useState(\"full\");\n  const [branch, setBranch] = useState(-1);\n  const [userColor, setUserColor] = useState(\"white\");\n  const [hostColor, setHostColor] = useState(\"white\");\n  const [pathColor, setPathColor] = useState(\"white\");\n  const [branchColor, setBranchColor] = useState(\"white\");\n\n  const colors = {\n    black: `\\\\[\\\\e[30m\\\\]`,\n    blue: `\\\\[\\\\e[34m\\\\]`,\n    cyan: `\\\\[\\\\e[36m\\\\]`,\n    green: `\\\\[\\\\e[32m\\\\]`,\n    purple: `\\\\[\\\\e[35m\\\\]`,\n    red: `\\\\[\\\\e[31m\\\\]`,\n    white: `\\\\[\\\\e[37m\\\\]`,\n    yellow: `\\\\[\\\\e[33m\\\\]`,\n  };\n\n  return (\n    <PromptContext.Provider\n      value={{\n        colors,\n        user,\n        setUser,\n        host,\n        setHost,\n        path,\n        setPath,\n        branch,\n        setBranch,\n        userColor,\n        setUserColor,\n        hostColor,\n        setHostColor,\n        pathColor,\n        setPathColor,\n        branchColor,\n        setBranchColor,\n      }}\n    >\n      {props.children}\n    </PromptContext.Provider>\n  );\n};\n","import SectionsForm from \"./SectionsForm\";\nexport default SectionsForm;\n","import { usePrompt } from \"../../../context/promptContext\";\nimport styles from \"./SectionsForm.module.css\";\n\nconst SectionsForm = () => {\n  const {\n    colors,\n    user,\n    setUser,\n    host,\n    setHost,\n    path,\n    setPath,\n    branch,\n    setBranch,\n    userColor,\n    setUserColor,\n    hostColor,\n    setHostColor,\n    pathColor,\n    setPathColor,\n    branchColor,\n    setBranchColor,\n  } = usePrompt();\n\n  const colorKeys = Object.keys(colors);\n\n  const toggle = (state, stateSetter) => {\n    state === 1 ? stateSetter(-1) : stateSetter(1);\n  };\n\n  return (\n    <div>\n      <p className={styles.subsection}>Basic Options</p>\n\n      <div className={styles.subsectionForm}>\n        <div>\n          <label className={styles.label} htmlFor=\"username\">\n            Username:\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"username\"\n            checked={user === 1}\n            onChange={() => toggle(user, setUser)}\n          />\n          {user === 1 && (\n            <select\n              onChange={(e) => setUserColor(e.target.value)}\n              value={userColor}\n              className={styles.dropdown}\n            >\n              {colorKeys.map((color) => (\n                <option value={color} key={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n\n        <div>\n          <label className={styles.label} htmlFor=\"hostname\">\n            Hostname:\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"hostname\"\n            checked={host === 1}\n            onChange={() => toggle(host, setHost)}\n          />\n          {host === 1 && (\n            <select\n              onChange={(e) => setHostColor(e.target.value)}\n              value={hostColor}\n              className={styles.dropdown}\n            >\n              {colorKeys.map((color) => (\n                <option value={color} key={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n\n        <div>\n          <label className={styles.label} htmlFor=\"git-branch\">\n            Display Git Branch\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"git-branch\"\n            checked={branch === 1}\n            onChange={() => toggle(branch, setBranch)}\n          />\n          {branch === 1 && (\n            <select\n              onChange={(e) => setBranchColor(e.target.value)}\n              value={branchColor}\n              className={styles.dropdown}\n            >\n              {colorKeys.map((color) => (\n                <option value={color} key={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <p className={styles.subsection}>Path</p>\n        <div className={styles.subsectionForm}>\n          <label className={styles.label} htmlFor=\"full\">\n            Full:\n          </label>\n          <input\n            type=\"radio\"\n            value=\"full\"\n            name=\"path\"\n            checked={path === \"full\"}\n            onChange={(e) => setPath(e.target.value)}\n          />\n\n          <label className={styles.label} htmlFor=\"partial\">\n            Partial:\n          </label>\n          <input\n            type=\"radio\"\n            value=\"partial\"\n            name=\"path\"\n            checked={path === \"partial\"}\n            onChange={(e) => setPath(e.target.value)}\n          />\n\n          <label className={styles.label} htmlFor=\"none\">\n            None:\n          </label>\n          <input\n            type=\"radio\"\n            value=\"none\"\n            name=\"path\"\n            checked={path === \"none\"}\n            onChange={(e) => setPath(e.target.value)}\n          />\n\n          {path !== \"none\" && (\n            <select\n              onChange={(e) => setPathColor(e.target.value)}\n              value={pathColor}\n              className={styles.dropdown}\n            >\n              {colorKeys.map((color) => (\n                <option value={color} key={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SectionsForm;\n","import PromptOutput from './PromptOutput';\n\nexport default PromptOutput;\n","import { usePrompt } from \"../../context/promptContext\";\nimport { useEffect, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport styles from \"./PromptOutput.module.css\";\n\nconst PromptOutput = () => {\n  const {\n    colors,\n    user,\n    host,\n    path,\n    branch,\n    userColor,\n    hostColor,\n    pathColor,\n    branchColor,\n  } = usePrompt();\n\n  const [userPrompt, setUserPrompt] = useState(null);\n  const [hostPrompt, setHostPrompt] = useState(null);\n  const [pathPrompt, setPathPrompt] = useState(null);\n  const [branchPrompt, setBranchPrompt] = useState(null);\n\n  useEffect(() => {\n    let userPromptInfo = user === 1 ? \"\\\\u\" : \"\";\n    if (userPromptInfo !== \"\") {\n      setUserPrompt(colors[userColor] + userPromptInfo);\n    } else {\n      setUserPrompt(userPromptInfo);\n    }\n  }, [user, userColor, colors]);\n\n  useEffect(() => {\n    let hostPromptInfo = host === 1 ? \"\\\\H\" : \"\";\n    if (hostPromptInfo !== \"\") {\n      setHostPrompt(colors[hostColor] + hostPromptInfo);\n    } else {\n      setHostPrompt(hostPromptInfo);\n    }\n  }, [host, colors, hostColor]);\n\n  useEffect(() => {\n    let pathPromptInfo =\n      path === \"full\" ? \"\\\\w\" : path === \"partial\" ? \"\\\\W\" : \"\";\n    if (pathPromptInfo !== \"\") {\n      setPathPrompt(colors[pathColor] + pathPromptInfo);\n    } else {\n      setPathPrompt(pathPromptInfo);\n    }\n  }, [path, pathColor, colors]);\n\n  useEffect(() => {\n    let branchPromptInfo = branch === 1 ? \"\\\\$(parse_git_branch)\" : \"\";\n    if (branchPromptInfo !== \"\") {\n      setBranchPrompt(colors[branchColor] + branchPromptInfo);\n    } else {\n      setBranchPrompt(branchPromptInfo);\n    }\n  }, [branch, colors, branchColor]);\n\n  let wGit = `\\nfunction parse_git_branch {\\n  git branch 2> /dev/null sed -e '/^[^*]/d' -e 's/* \\\\(.*\\\\)/(\\\\1)/'\\n} \\n\\nexport PS1=\"${userPrompt}${user === 1 && host === 1 ? \"@\" : \"\"}${hostPrompt}${pathPrompt}${branchPrompt}\"`;\n\n  let woGit = `export PS1=\"${userPrompt}${user === 1 && host === 1 ? \"@\" : \"\"}${hostPrompt}${pathPrompt}${branchPrompt}\"`;\n\n  return (\n    <>\n      <textarea\n        className={styles.prompt}\n        readOnly\n        value={branch === 1 ? wGit : woGit}\n      />\n      <CopyToClipboard text={branch === 1 ? wGit : woGit}>\n        <button className={styles.copyButton}>Copy</button>\n      </CopyToClipboard>\n    </>\n  );\n};\n\nexport default PromptOutput;\n","import { SectionsForm, PromptOutput } from \"./components\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={styles.mainContainer}>\n      <div className={styles.header}>\n        <h1>Make Your Prompt Awesome</h1>\n      </div>\n\n      <div className={styles.contentContainer}>\n        <div className={styles.formContainer}>\n          <SectionsForm />\n        </div>\n\n        <div className={styles.promptContainer}>\n          <PromptOutput />\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <p>Links</p>\n        <p>and</p>\n        <p>Stuff</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { PromptProvider } from \"./context/promptContext\";\nimport \"./index.css\";\n\nconst Root = () => {\n  return (\n    <PromptProvider>\n      <App />\n    </PromptProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"SectionsForm_dropdown__uMT-P\",\"label\":\"SectionsForm_label__3izuN\",\"subsection\":\"SectionsForm_subsection__ZobBW\",\"subsectionForm\":\"SectionsForm_subsectionForm__1ZtMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__2o5r7\",\"header\":\"App_header__3ZZ1n\",\"contentContainer\":\"App_contentContainer__1Uo_h\",\"formContainer\":\"App_formContainer__2yBgz\",\"promptContainer\":\"App_promptContainer__2HFzQ\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prompt\":\"PromptOutput_prompt__2b0D0\",\"copyButton\":\"PromptOutput_copyButton__3KqcH\"};"],"sourceRoot":""}